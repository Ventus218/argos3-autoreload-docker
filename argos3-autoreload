#!/bin/bash

print_usage() {
    echo
    echo This script watches every file in the directory of the given simulation
    echo file and restarts the simulator every time it detects a change.
    echo
    echo "Usage: $(basename $0) -c <simulation_file> <other_arguments>"
    echo "<simulation_file>: The .argos simulation file"
    echo "<other_arguments>: Any other argument will be passed to argos3"
    echo
}

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    print_usage
    exit 0
fi

while getopts ":c:" opt; do
    case "$opt" in
        c) SIMULATION_FILE="$OPTARG" ;;
    esac
done

if [ -z "$SIMULATION_FILE" ]; then
    echo "Error: No simulation file provided."
    print_usage
    exit 1
fi

if [ ! -f "$SIMULATION_FILE" ]; then
    echo "Error: The specified file $SIMULATION_FILE does not exist or is not a file."
    print_usage
    exit 1
fi

SIMULATION_DIR=$(dirname "$SIMULATION_FILE")

start_simulation() {
    argos3 "$@" 1>&2 &
    echo $!
}

SIMULATION_PID=$(start_simulation "$@")

directory_snapshot() {
    ls -lR "$SIMULATION_DIR"
}

PREVIOUS_SNAPSHOT=$(directory_snapshot)
while true; do
    CURRENT_SNAPSHOT=$(directory_snapshot)
    
    if [[ "$PREVIOUS_SNAPSHOT" != "$CURRENT_SNAPSHOT" ]]; then
        echo "Change detected! Rerunning $SIMULATION_FILE"

        # killing the process would work but the newly opened window
        # will not have the same position and size of the closed one
        # kill "$SIMULATION_PID"

        # In order to let the window remember its size and position
        # it's possible to simulate the Alt+F4 keyboard shortcut.
        WINDOW_ID=$(xdotool search --pid "$SIMULATION_PID")
        xdotool windowactivate "$WINDOW_ID"
        xdotool key Alt+F4

        SIMULATION_PID=$(start_simulation "$@")
        
        PREVIOUS_SNAPSHOT="$CURRENT_SNAPSHOT"
    fi
    
    sleep 1
done
